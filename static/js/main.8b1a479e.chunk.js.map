{"version":3,"sources":["layout/Style.js","data.js","components/Table.js","components/Chart.js","components/Dialog.js","components/Main.js","pages/Dashboard.js","reportWebVitals.js","layout/Header.js","layout/index.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","formControl","margin","minWidth","selectEmpty","marginTop","control","countries","cities","Russia","UK","Ukrain","genders","Output","props","data","undefined","shift","rows","map","row","index","id","product","price","style","columns","field","headerName","pageSize","checkboxSelection","Chart","console","log","state","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","text","fontSize","legend","AlertDialog","Dialog","open","openDialog","onClose","handleCloseDialog","aria-labelledby","aria-describedby","DialogContent","DialogContentText","DialogActions","Button","onClick","color","handleAccept","autoFocus","Main","classes","React","useState","name","setName","email","setEmail","age","setAge","gender","setGender","city","setCity","country","setCountry","file","setFile","rawData","setRawData","showOutput","setShowoutput","csvData","setcsvData","chartData","setchartData","cityList","setCityList","setOpenDialog","btnEnabeled","updateData","csv","Papa","unparse","handleCSVUpload","type","parse","complete","toast","error","showOutPut","Typography","variant","Grid","item","xs","TextField","fullWidth","onChange","event","target","value","FormControl","className","InputLabel","Select","labelId","MenuItem","Array","elementInArray","files","accept","size","float","disabled","multiline","rowsMax","InputLabelProps","shrink","textAlign","fontWeight","Dashboard","Paper","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","AppBar","clsx","Toolbar","component","noWrap","Layout","CssBaseline","Container","maxWidth","children","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OA6FeA,EA1FGC,aAAW,SAACC,GAAD,MAAY,CACxCC,KAAM,CACLC,QAAS,QAEVC,QAAS,CACRC,aAAc,IAEfC,YAAY,aACXH,QAAS,OACTI,WAAY,SACZC,eAAgB,WAChBC,QAAS,SACNR,EAAMS,OAAON,SAEjBO,OAAQ,CACPC,OAAQX,EAAMW,OAAOC,OAAS,EAC9BC,WAAYb,EAAMc,YAAYC,OAAO,CAAC,QAAS,UAAW,CACzDC,OAAQhB,EAAMc,YAAYE,OAAOC,MACjCC,SAAUlB,EAAMc,YAAYI,SAASC,iBAGvCC,YAAa,CACZC,WAxBkB,IAyBlBC,MAAM,eAAD,OAzBa,IAyBb,OACLT,WAAYb,EAAMc,YAAYC,OAAO,CAAC,QAAS,UAAW,CACzDC,OAAQhB,EAAMc,YAAYE,OAAOC,MACjCC,SAAUlB,EAAMc,YAAYI,SAASK,kBAGvCC,WAAY,CACXC,YAAa,IAEdC,iBAAkB,CACjBxB,QAAS,QAEVyB,MAAO,CACNC,SAAU,GAEXC,YAAa,CACZC,SAAU,WACVC,WAAY,SACZT,MA3CkB,IA4ClBT,WAAYb,EAAMc,YAAYC,OAAO,QAAS,CAC7CC,OAAQhB,EAAMc,YAAYE,OAAOC,MACjCC,SAAUlB,EAAMc,YAAYI,SAASK,kBAGvCS,iBAAiB,aAChBC,UAAW,SACXpB,WAAYb,EAAMc,YAAYC,OAAO,QAAS,CAC7CC,OAAQhB,EAAMc,YAAYE,OAAOC,MACjCC,SAAUlB,EAAMc,YAAYI,SAASC,gBAEtCG,MAAOtB,EAAMkC,QAAQ,IACpBlC,EAAMmC,YAAYC,GAAG,MAAQ,CAC7Bd,MAAOtB,EAAMkC,QAAQ,KAGvBG,aAAcrC,EAAMS,OAAON,QAC3BmC,QAAS,CACRV,SAAU,EACVW,OAAQ,QACRC,SAAU,QAEXC,UAAW,CACVC,WAAY1C,EAAMkC,QAAQ,GAC1BS,cAAe3C,EAAMkC,QAAQ,IAE9BU,MAAO,CACNpC,QAASR,EAAMkC,QAAQ,GACvBhC,QAAS,OACTsC,SAAU,OACVK,cAAe,UAEhBC,YAAa,CACZP,OAAQ,KAETQ,YAAa,CACZC,OAAQhD,EAAMkC,QAAQ,GACtBe,SAAU,IACV3B,MAAO,QAER4B,YAAa,CACZC,UAAWnD,EAAMkC,QAAQ,IAE1BkB,QAAS,CACR5C,QAASR,EAAMkC,QAAQ,Q,2ECzFZmB,EAAY,CAAC,SAAU,KAAM,UAE7BC,EAAS,CACrBC,OAAQ,CACP,cACA,kBACA,SACA,OACA,QACA,MACA,eAEDC,GAAI,CAAC,SAAU,aAAc,QAAS,UAAW,YAAa,IAC9DC,OAAQ,CACP,WACA,cACA,aACA,SACA,UACA,iBACA,UACA,SAIWC,EAAU,CAAC,OAAQ,SAAU,e,iCCtB3B,SAASC,EAAOC,GAC9B,IAAMC,EAAOD,EAAMC,KAEnB,IAAKA,QAAiBC,IAATD,EACZ,OAAO,KAQRA,EAAKE,QAEL,IAAMC,EAAOH,EAAKI,KAAI,SAACC,EAAKC,GAC3B,MAAO,CACNC,GAAID,EAAQ,EACZE,QAASH,EAAI,GACbI,MAAOJ,EAAI,OAIb,OACC,qBAAKK,MAAO,CAAEhC,OAAQ,IAAKjB,MAAO,QAAlC,SACC,cAAC,IAAD,CAAU0C,KAAMA,EAAMQ,QAjBR,CACf,CAAEC,MAAO,UAAWC,WAAY,UAAWpD,MAAO,KAClD,CAAEmD,MAAO,QAASC,WAAY,QAASpD,MAAO,MAeLqD,SAAU,EAAGC,mBAAiB,M,aCsB1DC,EA9CD,SAACjB,GACd,IAAMC,EAAOD,EAAMC,KAEnB,IAAKA,QAAiBC,IAATD,EACZ,OAAO,KAGRiB,QAAQC,IAAIlB,GAEZA,EAAKE,QAEL,IAEMiB,EAAQ,CACbC,OAHcpB,EAAKI,KAAI,SAACC,GAAD,OAASA,EAAI,MAIpCgB,SAAU,CACT,CACCC,MAAO,QACPC,gBAAiB,UACjBC,YAAa,gBACbC,YAAa,EACbzB,KAAMA,EAAKI,KAAI,SAACC,GAAD,OAASA,EAAI,SAK/B,OACC,8BACC,cAAC,MAAD,CACCL,KAAMmB,EACNO,QAAS,CACR5D,MAAO,CACNzB,SAAS,EACTsF,KAAM,oBACNC,SAAU,IAEXC,OAAQ,CACPxF,SAAS,EACT4B,SAAU,e,oCClCD,SAAS6D,EAAY/B,GACnC,OACC,8BACC,eAACgC,EAAA,EAAD,CACCC,KAAMjC,EAAMkC,WACZC,QAASnC,EAAMoC,kBACfC,kBAAgB,qBAChBC,mBAAiB,2BAJlB,UAMC,cAACC,EAAA,EAAD,UACC,cAACC,EAAA,EAAD,CAAmBhC,GAAG,2BAAtB,yDAID,eAACiC,EAAA,EAAD,WACC,cAACC,EAAA,EAAD,CAAQC,QAAS3C,EAAMoC,kBAAmBQ,MAAM,UAAhD,gBAGA,cAACF,EAAA,EAAD,CAAQC,QAAS3C,EAAM6C,aAAcD,MAAM,UAAUE,WAAS,EAA9D,yB,aCgYUC,G,OAvYF,WACZ,IAAMC,EAAU9G,IADE,EAEM+G,IAAMC,SAAS,IAFrB,mBAEXC,EAFW,KAELC,EAFK,OAGQH,IAAMC,SAAS,IAHvB,mBAGXG,EAHW,KAGJC,EAHI,OAIIL,IAAMC,SAAS,IAJnB,mBAIXK,EAJW,KAINC,EAJM,OAKUP,IAAMC,SAAS,IALzB,mBAKXO,EALW,KAKHC,EALG,OAMMT,IAAMC,SAAS,IANrB,mBAMXS,EANW,KAMLC,EANK,OAOYX,IAAMC,SAAS,IAP3B,mBAOXW,EAPW,KAOFC,EAPE,OAQMb,IAAMC,WARZ,mBAQXa,EARW,KAQLC,EARK,OASYf,IAAMC,WATlB,mBASXe,EATW,KASFC,EATE,QAUkBjB,IAAMC,UAAS,GAVjC,qBAUXiB,GAVW,MAUCC,GAVD,SAWYnB,IAAMC,WAXlB,qBAWXmB,GAXW,MAWFC,GAXE,SAYgBrB,IAAMC,WAZtB,qBAYXqB,GAZW,MAYAC,GAZA,SAacvB,IAAMC,SAAS,IAb7B,qBAaXuB,GAbW,MAaDC,GAbC,SAckBzB,IAAMC,UAAS,GAdjC,qBAcXhB,GAdW,MAcCyC,GAdD,MAgBZC,KACHzB,KACAE,KACAE,KACAE,KACAE,KACAE,MACCE,KAAUE,GAqBRY,GAAa,SAAC5E,GACnB,IAAM6E,EAAMC,IAAKC,QAAQ/E,EAAKA,MAC9BiE,EAAWY,IAoBNG,GAAkB,WACjBlB,GAAsB,aAAdA,EAAKmB,KAClBH,IAAKI,MAAMpB,EAAM,CAChBqB,SAAUP,KAGXQ,IAAMC,MAAM,gCAEbX,IAAc,IAkBTY,GAAa,SAACtF,GACnBqE,GAAWrE,EAAKA,MAChBuE,GAAa,YAAIvE,EAAKA,OACtBmE,IAAc,IAGf,OACC,sCACGD,IACD,qCACC,cAACqB,EAAA,EAAD,CAAYC,QAAQ,KAApB,kBACA,eAACC,EAAA,EAAD,CAAM7G,WAAS,EAACP,QAAS,EAAzB,UACC,cAACoH,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACC,cAACC,EAAA,EAAD,CACCrF,GAAG,OACHe,MAAM,OACNkE,QAAQ,WACRK,WAAW,EACXC,SAAU,SAACC,GACV5C,EAAQ4C,EAAMC,OAAOC,QAEtBA,MAAO/C,MAGT,cAACuC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACC,eAACO,EAAA,EAAD,CAAaV,QAAQ,WAAWW,UAAWpD,EAAQ7D,YAAnD,UACC,cAACkH,EAAA,EAAD,CAAY7F,GAAG,oCAAf,oBAGA,cAAC8F,EAAA,EAAD,CACCC,QAAQ,oCACR/F,GAAG,8BACH0F,MAAOzC,EACPsC,SAAU,SAACC,GACVtC,EAAUsC,EAAMC,OAAOC,QAExB3E,MAAM,SAPP,SASEzB,EAAQO,KAAI,SAACsF,EAAMpF,GAAP,OACZ,cAACiG,EAAA,EAAD,CAAUN,MAAOP,EAAjB,SACEA,GAD0BpF,aAOhC,cAACmF,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACC,eAACO,EAAA,EAAD,CAAaV,QAAQ,WAAWW,UAAWpD,EAAQ7D,YAAnD,UACC,cAACkH,EAAA,EAAD,CAAY7F,GAAG,oCAAf,iBAGA,cAAC8F,EAAA,EAAD,CACCC,QAAQ,oCACR/F,GAAG,8BACH0F,MAAO3C,EACPwC,SAAU,SAACC,GACVxC,EAAOwC,EAAMC,OAAOC,QAErB3E,MAAM,MAPP,SASE,YAAIkF,MAAM,MAAMpG,KAAI,SAACqG,EAAgBnG,GAAjB,OACpB,cAACiG,EAAA,EAAD,CAAUN,MAAO3F,EAAjB,SACEA,GAD2BA,aAOjC,cAACmF,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACC,cAACC,EAAA,EAAD,CACCrF,GAAG,QACHe,MAAM,QACNkE,QAAQ,WACRK,WAAW,EACXI,MAAO7C,EACP0C,SAAU,SAACC,GACV1C,EAAS0C,EAAMC,OAAOC,YAIzB,cAACR,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACC,eAACO,EAAA,EAAD,CAAaV,QAAQ,WAAWW,UAAWpD,EAAQ7D,YAAnD,UACC,cAACkH,EAAA,EAAD,CAAY7F,GAAG,oCAAf,qBAGA,cAAC8F,EAAA,EAAD,CACCC,QAAQ,oCACR/F,GAAG,8BACH0F,MAAOrC,EACPkC,SAAU,SAACC,GACVlC,EAAWkC,EAAMC,OAAOC,OACxBxB,GAAYhF,EAAOsG,EAAMC,OAAOC,SAEjC3E,MAAM,UARP,SAUE9B,EAAUY,KAAI,SAACsF,GAAD,OACd,cAACa,EAAA,EAAD,CAAUN,MAAOP,EAAjB,SACEA,GAD0BA,aAOhC,cAACD,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACC,eAACO,EAAA,EAAD,CAAaV,QAAQ,WAAWW,UAAWpD,EAAQ7D,YAAnD,UACC,cAACkH,EAAA,EAAD,CAAY7F,GAAG,oCAAf,kBAGA,cAAC8F,EAAA,EAAD,CACCC,QAAQ,oCACR/F,GAAG,8BACH0F,MAAOvC,EACPoC,SAAU,SAACC,GACVpC,EAAQoC,EAAMC,OAAOC,QAEtB3E,MAAM,OAPP,SASEkD,GAASpE,KAAI,SAACsF,GAAD,OACb,cAACa,EAAA,EAAD,CAAUN,MAAOP,EAAjB,SAAwBA,iBAM7B,uBACA,cAACH,EAAA,EAAD,CAAYC,QAAQ,KAApB,wBACA,eAACC,EAAA,EAAD,CAAM7G,WAAS,EAACP,QAAS,EAAzB,UACC,cAACoH,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACC,cAACC,EAAA,EAAD,CACCrF,GAAG,OACHiF,QAAQ,WACRP,KAAK,OACLY,WAAW,EACXC,SAAU,SAACC,GACVhC,EAAQgC,EAAMC,OAAOU,MAAM,KAE5BC,OAAO,UAGT,cAAClB,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACC,cAAClD,EAAA,EAAD,CACC+C,QAAQ,YACRoB,KAAK,QACLjE,MAAM,UACNwD,UAAWpD,EAAQ5D,OACnBuB,MAAO,CACNmG,MAAO,QACPnI,OAAQ,GACRjB,MAAO,QAERiF,QA5Le,WACfsB,EACLU,IAAc,GAEdM,MAyLK8B,UAAWhD,EAXZ,sBAgBD,cAAC2B,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACC,cAACC,EAAA,EAAD,CACCtE,MAAM,wBACNyF,WAAS,EACT5G,KAAM,GACNqF,QAAQ,WACRwB,QAAS,GACTnB,WAAW,EACXC,SAAU,SAACC,GACV9B,EAAW8B,EAAMC,OAAOC,QAEzBgB,gBAAiB,CAChBC,QAAQ,GAETjB,MAAOjC,cAMTW,MAAiBT,IACnB,qCACC,cAACqB,EAAA,EAAD,CAAYC,QAAQ,KAApB,kCACA,eAACC,EAAA,EAAD,CAAM7G,WAAS,EAACP,QAAS,EAAzB,UACC,eAACoH,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,UACC,eAACF,EAAA,EAAD,CAAM7G,WAAS,EAACP,QAAS,EAAzB,UACC,cAACoH,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACC,mBAAGjF,MAAO,CAAEyG,UAAW,OAAQC,WAAY,UAA3C,sBAID,cAAC3B,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACC,mBAAGjF,MAAO,CAAEyG,UAAW,SAAvB,SAAmCjE,SAGrC,uBACA,eAACuC,EAAA,EAAD,CAAM7G,WAAS,EAACP,QAAS,EAAzB,UACC,cAACoH,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACC,mBAAGjF,MAAO,CAAEyG,UAAW,OAAQC,WAAY,UAA3C,qBAID,cAAC3B,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACC,mBAAGjF,MAAO,CAAEyG,UAAW,SAAvB,SAAmC7D,SAGrC,uBACA,eAACmC,EAAA,EAAD,CAAM7G,WAAS,EAACP,QAAS,EAAzB,UACC,cAACoH,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACC,mBAAGjF,MAAO,CAAEyG,UAAW,OAAQC,WAAY,UAA3C,wBAID,cAAC3B,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACC,mBAAGjF,MAAO,CAAEyG,UAAW,SAAvB,SAAmC3D,SAGrC,0BAED,eAACiC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,UACC,eAACF,EAAA,EAAD,CAAM7G,WAAS,EAACP,QAAS,EAAzB,UACC,cAACoH,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACC,mBAAGjF,MAAO,CAAEyG,UAAW,OAAQC,WAAY,UAA3C,uBAID,cAAC3B,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACC,mBAAGjF,MAAO,CAAEyG,UAAW,SAAvB,SAAmC/D,SAGrC,uBACA,eAACqC,EAAA,EAAD,CAAM7G,WAAS,EAACP,QAAS,EAAzB,UACC,cAACoH,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACC,mBAAGjF,MAAO,CAAEyG,UAAW,OAAQC,WAAY,UAA3C,yBAID,cAAC3B,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACC,mBAAGjF,MAAO,CAAEyG,UAAW,SAAvB,SAAmCvD,SAGrC,uBACA,eAAC6B,EAAA,EAAD,CAAM7G,WAAS,EAACP,QAAS,EAAzB,UACC,cAACoH,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACC,mBAAGjF,MAAO,CAAEyG,UAAW,OAAQC,WAAY,UAA3C,sBAID,cAAC3B,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACC,mBAAGjF,MAAO,CAAEyG,UAAW,SAAvB,SAAmC3D,SAGrC,6BAGF,eAACiC,EAAA,EAAD,CAAM7G,WAAS,EAACP,QAAS,EAAzB,UACC,eAACoH,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,UACC,cAACJ,EAAA,EAAD,CAAYC,QAAQ,KAApB,kBACA,cAAC,EAAD,CAAOxF,KAAMoE,QAEd,eAACqB,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,UACC,cAACJ,EAAA,EAAD,CAAYC,QAAQ,KAApB,mBACA,cAAC,EAAD,CAAOxF,KAAMsE,cAKjB,cAACmB,EAAA,EAAD,CAAM7G,WAAS,EAACP,QAAS,EAAzB,SACC,eAACoH,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIjF,MAAO,CAAEyG,UAAW,UAAvC,WACGjD,IACD,cAACzB,EAAA,EAAD,CACC+C,QAAQ,YACRoB,KAAK,SACLjE,MAAM,UACNwD,UAAWpD,EAAQ5D,OACnB2H,UAAWnC,GACXjE,MAAO,CAAE9C,YAAa,IACtB8E,QA5Re,WACdsB,GACLc,IAAKI,MAAMlB,EAAS,CACnBmB,SAAUG,MAkRR,sBAYD,cAAC7C,EAAA,EAAD,CACC+C,QAAQ,YACRoB,KAAK,SACLjE,MAAM,YACND,QA7Ve,WACnBS,EAAQ,IACRE,EAAS,IACTE,EAAO,IACPE,EAAU,IACVE,EAAQ,IACRE,EAAW,IACXE,IACAI,IAAc,GACdE,GAAW,IACXJ,EAAW,KA+UR,wBAUF,cAAC,EAAD,CACChC,WAAYA,GACZE,kBAAmB,WAClBuC,IAAc,IAEf9B,aAAcoC,KAEf,cAAC,IAAD,SClYYqC,EAbG,WACjB,IAAMtE,EAAU9G,IAChB,OACC,cAACqL,EAAA,EAAD,CAAOnB,UAAWpD,EAAQxD,QAA1B,SACC,cAACkG,EAAA,EAAD,CAAM7G,WAAS,EAACP,QAAS,EAAzB,SACC,cAACoH,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACC,cAAC,EAAD,WCAU4B,EAZS,SAACC,GACpBA,GAAeA,aAAuBC,UACzC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC5DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,2CCsBIQ,EAtBA,WACd,IAAMjF,EAAU9G,IAChB,OACC,cAACgM,EAAA,EAAD,CACChK,SAAS,WACTkI,UAAW+B,YAAKnF,EAAQlG,OAAQkG,EAAQxF,aAFzC,SAIC,cAAC4K,EAAA,EAAD,CAAShC,UAAWpD,EAAQzG,QAA5B,SACC,cAACiJ,EAAA,EAAD,CACC6C,UAAU,KACV5C,QAAQ,KACR7C,MAAM,UACN0F,QAAM,EACNlC,UAAWpD,EAAQjF,MALpB,gCCOWwK,EAhBA,SAACvI,GACf,IAAMgD,EAAU9G,IAChB,OACC,sBAAKkK,UAAWpD,EAAQ3G,KAAxB,UACC,cAACmM,EAAA,EAAD,IACA,cAAC,EAAD,IACA,uBAAMpC,UAAWpD,EAAQtE,QAAzB,UACC,qBAAK0H,UAAWpD,EAAQvE,eACxB,cAACgK,EAAA,EAAD,CAAWC,SAAS,KAAKtC,UAAWpD,EAAQnE,UAA5C,SACEmB,EAAM2I,kBCRZC,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,UACC,cAAC,EAAD,QAGFC,SAASC,eAAe,SAMzBxB,M","file":"static/js/main.8b1a479e.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles'\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: 'flex',\n\t},\n\ttoolbar: {\n\t\tpaddingRight: 24, // keep right padding when drawer closed\n\t},\n\ttoolbarIcon: {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'flex-end',\n\t\tpadding: '0 8px',\n\t\t...theme.mixins.toolbar,\n\t},\n\tappBar: {\n\t\tzIndex: theme.zIndex.drawer + 1,\n\t\ttransition: theme.transitions.create(['width', 'margin'], {\n\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\tduration: theme.transitions.duration.leavingScreen,\n\t\t}),\n\t},\n\tappBarShift: {\n\t\tmarginLeft: drawerWidth,\n\t\twidth: `calc(100% - ${drawerWidth}px)`,\n\t\ttransition: theme.transitions.create(['width', 'margin'], {\n\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\tduration: theme.transitions.duration.enteringScreen,\n\t\t}),\n\t},\n\tmenuButton: {\n\t\tmarginRight: 36,\n\t},\n\tmenuButtonHidden: {\n\t\tdisplay: 'none',\n\t},\n\ttitle: {\n\t\tflexGrow: 1,\n\t},\n\tdrawerPaper: {\n\t\tposition: 'relative',\n\t\twhiteSpace: 'nowrap',\n\t\twidth: drawerWidth,\n\t\ttransition: theme.transitions.create('width', {\n\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\tduration: theme.transitions.duration.enteringScreen,\n\t\t}),\n\t},\n\tdrawerPaperClose: {\n\t\toverflowX: 'hidden',\n\t\ttransition: theme.transitions.create('width', {\n\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\tduration: theme.transitions.duration.leavingScreen,\n\t\t}),\n\t\twidth: theme.spacing(7),\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth: theme.spacing(9),\n\t\t},\n\t},\n\tappBarSpacer: theme.mixins.toolbar,\n\tcontent: {\n\t\tflexGrow: 1,\n\t\theight: '100vh',\n\t\toverflow: 'auto',\n\t},\n\tcontainer: {\n\t\tpaddingTop: theme.spacing(4),\n\t\tpaddingBottom: theme.spacing(4),\n\t},\n\tpaper: {\n\t\tpadding: theme.spacing(2),\n\t\tdisplay: 'flex',\n\t\toverflow: 'auto',\n\t\tflexDirection: 'column',\n\t},\n\tfixedHeight: {\n\t\theight: 240,\n\t},\n\tformControl: {\n\t\tmargin: theme.spacing(1),\n\t\tminWidth: 120,\n\t\twidth: '100%',\n\t},\n\tselectEmpty: {\n\t\tmarginTop: theme.spacing(2),\n\t},\n\tcontrol: {\n\t\tpadding: theme.spacing(2),\n\t},\n}))\n\nexport default useStyles\n","export const countries = ['Russia', 'UK', 'Ukrain']\n\nexport const cities = {\n\tRussia: [\n\t\t'Novosibirsk',\n\t\t'Nizhny Novgorod',\n\t\t'Samara',\n\t\t'Omsk',\n\t\t'Kazan',\n\t\t'Ufa',\n\t\t'Chelyabinsk',\n\t],\n\tUK: ['LONDON', 'Birmingham', 'Leeds', 'Glasgow', 'Sheffield', ''],\n\tUkrain: [\n\t\t'Mykolaiv',\n\t\t'Kryvy Rig\t',\n\t\t'Zaporozhye',\n\t\t'Odessa',\n\t\t'Donetsk',\n\t\t'Dnepropetrovsk',\n\t\t'Kharkov',\n\t\t'KIEV',\n\t],\n}\n\nexport const genders = ['Male', 'Female', 'Unspecified']\n","import React from 'react'\nimport { DataGrid } from '@material-ui/data-grid'\n\nexport default function Output(props) {\n\tconst data = props.data\n\n\tif (!data || data === undefined) {\n\t\treturn null\n\t}\n\n\tconst columns = [\n\t\t{ field: 'product', headerName: 'Product', width: 250 },\n\t\t{ field: 'price', headerName: 'Price', width: 250 },\n\t]\n\n\tdata.shift()\n\n\tconst rows = data.map((row, index) => {\n\t\treturn {\n\t\t\tid: index + 1,\n\t\t\tproduct: row[0],\n\t\t\tprice: row[1],\n\t\t}\n\t})\n\n\treturn (\n\t\t<div style={{ height: 400, width: '100%' }}>\n\t\t\t<DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection />\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport { Bar } from 'react-chartjs-2'\n\nconst Chart = (props) => {\n\tconst data = props.data\n\n\tif (!data || data === undefined) {\n\t\treturn null\n\t}\n\n\tconsole.log(data)\n\n\tdata.shift()\n\n\tconst labels = data.map((row) => row[0])\n\n\tconst state = {\n\t\tlabels: labels,\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tlabel: 'Price',\n\t\t\t\tbackgroundColor: '#0000FF',\n\t\t\t\tborderColor: 'rgba(0,0,0,1)',\n\t\t\t\tborderWidth: 2,\n\t\t\t\tdata: data.map((row) => row[1]),\n\t\t\t},\n\t\t],\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Bar\n\t\t\t\tdata={state}\n\t\t\t\toptions={{\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\ttext: 'Price Per Product',\n\t\t\t\t\t\tfontSize: 20,\n\t\t\t\t\t},\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\tposition: 'right',\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nexport default Chart\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\n\nexport default function AlertDialog(props) {\n\treturn (\n\t\t<div>\n\t\t\t<Dialog\n\t\t\t\topen={props.openDialog}\n\t\t\t\tonClose={props.handleCloseDialog}\n\t\t\t\taria-labelledby='alert-dialog-title'\n\t\t\t\taria-describedby='alert-dialog-description'\n\t\t\t>\n\t\t\t\t<DialogContent>\n\t\t\t\t\t<DialogContentText id='alert-dialog-description'>\n\t\t\t\t\t\tAre you sure you want to replace the data\n\t\t\t\t\t</DialogContentText>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<Button onClick={props.handleCloseDialog} color='primary'>\n\t\t\t\t\t\tNo\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button onClick={props.handleAccept} color='primary' autoFocus>\n\t\t\t\t\t\tYes\n\t\t\t\t\t</Button>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport Grid from '@material-ui/core/Grid'\nimport useStyles from '../layout/Style'\nimport { Typography } from '@material-ui/core'\nimport Button from '@material-ui/core/Button'\nimport { countries, cities, genders } from '../data'\nimport Papa from 'papaparse'\nimport Table from './Table'\nimport Chart from './Chart'\nimport Dialog from './Dialog'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nconst Main = () => {\n\tconst classes = useStyles()\n\tconst [name, setName] = React.useState('')\n\tconst [email, setEmail] = React.useState('')\n\tconst [age, setAge] = React.useState('')\n\tconst [gender, setGender] = React.useState('')\n\tconst [city, setCity] = React.useState('')\n\tconst [country, setCountry] = React.useState('')\n\tconst [file, setFile] = React.useState()\n\tconst [rawData, setRawData] = React.useState()\n\tconst [showOutput, setShowoutput] = React.useState(false)\n\tconst [csvData, setcsvData] = React.useState()\n\tconst [chartData, setchartData] = React.useState()\n\tconst [cityList, setCityList] = React.useState([])\n\tconst [openDialog, setOpenDialog] = React.useState(false)\n\n\tconst btnEnabeled =\n\t\t!!name &&\n\t\t!!email &&\n\t\t!!age &&\n\t\t!!gender &&\n\t\t!!city &&\n\t\t!!country &&\n\t\t(!!file || !!rawData)\n\n\tconst handleReset = () => {\n\t\tsetName('')\n\t\tsetEmail('')\n\t\tsetAge('')\n\t\tsetGender('')\n\t\tsetCity('')\n\t\tsetCountry('')\n\t\tsetFile()\n\t\tsetShowoutput(false)\n\t\tsetcsvData('')\n\t\tsetRawData('')\n\t}\n\n\t/**\n\t * Converts the parsed array data from csv file to csv string, and display set rawData prop to display\n\t * it in Manual CSV Data input field\n\t *\n\t * @param {array} data - parsed array of objects from csv file\n\t */\n\tconst updateData = (data) => {\n\t\tconst csv = Papa.unparse(data.data)\n\t\tsetRawData(csv)\n\t}\n\n\t/**\n\t * Checks if data is already available in Manual CSV Data input field\n\t * if available, then open confirmation dialog and ask user for confirmation to replace data\n\t * If not available, then call handleCSVUpload to prepare data for chart and table\n\t */\n\tconst confirmUpload = () => {\n\t\tif (!!rawData) {\n\t\t\tsetOpenDialog(true)\n\t\t} else {\n\t\t\thandleCSVUpload()\n\t\t}\n\t}\n\n\t/**\n\t * Validate the uploaded file type, if it's not in text/csv format, then display error\n\t * If file is valid, parse the file and execute callback function\n\t */\n\tconst handleCSVUpload = () => {\n\t\tif (!!file && file.type === 'text/csv') {\n\t\t\tPapa.parse(file, {\n\t\t\t\tcomplete: updateData,\n\t\t\t})\n\t\t} else {\n\t\t\ttoast.error('Please upload valid csv file')\n\t\t}\n\t\tsetOpenDialog(false)\n\t}\n\n\t/**\n\t * This function actully parse the final data used to show table and charts in output screen\n\t * Check if rawData (comma seprated string) exists, if yes then convert it to array and call showOutPut function\n\t */\n\tconst handleSubmit = () => {\n\t\tif (!!rawData) {\n\t\t\tPapa.parse(rawData, {\n\t\t\t\tcomplete: showOutPut,\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Set csvData prop and shows the output page\n\t */\n\tconst showOutPut = (data) => {\n\t\tsetcsvData(data.data)\n\t\tsetchartData([...data.data])\n\t\tsetShowoutput(true)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{!showOutput && (\n\t\t\t\t<>\n\t\t\t\t\t<Typography variant='h6'>User</Typography>\n\t\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tid='name'\n\t\t\t\t\t\t\t\tlabel='Name'\n\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\tfullWidth={true}\n\t\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\t\tsetName(event.target.value)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={3}>\n\t\t\t\t\t\t\t<FormControl variant='outlined' className={classes.formControl}>\n\t\t\t\t\t\t\t\t<InputLabel id='demo-simple-select-outlined-label'>\n\t\t\t\t\t\t\t\t\tGender\n\t\t\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\tlabelId='demo-simple-select-outlined-label'\n\t\t\t\t\t\t\t\t\tid='demo-simple-select-outlined'\n\t\t\t\t\t\t\t\t\tvalue={gender}\n\t\t\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\t\t\tsetGender(event.target.value)\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tlabel='Gender'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{genders.map((item, index) => (\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={item} key={index}>\n\t\t\t\t\t\t\t\t\t\t\t{item}\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={3}>\n\t\t\t\t\t\t\t<FormControl variant='outlined' className={classes.formControl}>\n\t\t\t\t\t\t\t\t<InputLabel id='demo-simple-select-outlined-label'>\n\t\t\t\t\t\t\t\t\tAge\n\t\t\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\tlabelId='demo-simple-select-outlined-label'\n\t\t\t\t\t\t\t\t\tid='demo-simple-select-outlined'\n\t\t\t\t\t\t\t\t\tvalue={age}\n\t\t\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\t\t\tsetAge(event.target.value)\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tlabel='Age'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{[...Array(121)].map((elementInArray, index) => (\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={index} key={index}>\n\t\t\t\t\t\t\t\t\t\t\t{index}\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tid='email'\n\t\t\t\t\t\t\t\tlabel='Email'\n\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\tfullWidth={true}\n\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\t\tsetEmail(event.target.value)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={3}>\n\t\t\t\t\t\t\t<FormControl variant='outlined' className={classes.formControl}>\n\t\t\t\t\t\t\t\t<InputLabel id='demo-simple-select-outlined-label'>\n\t\t\t\t\t\t\t\t\tCountry\n\t\t\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\tlabelId='demo-simple-select-outlined-label'\n\t\t\t\t\t\t\t\t\tid='demo-simple-select-outlined'\n\t\t\t\t\t\t\t\t\tvalue={country}\n\t\t\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\t\t\tsetCountry(event.target.value)\n\t\t\t\t\t\t\t\t\t\tsetCityList(cities[event.target.value])\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tlabel='Country'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{countries.map((item) => (\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={item} key={item}>\n\t\t\t\t\t\t\t\t\t\t\t{item}\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={3}>\n\t\t\t\t\t\t\t<FormControl variant='outlined' className={classes.formControl}>\n\t\t\t\t\t\t\t\t<InputLabel id='demo-simple-select-outlined-label'>\n\t\t\t\t\t\t\t\t\tCity\n\t\t\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\tlabelId='demo-simple-select-outlined-label'\n\t\t\t\t\t\t\t\t\tid='demo-simple-select-outlined'\n\t\t\t\t\t\t\t\t\tvalue={city}\n\t\t\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\t\t\tsetCity(event.target.value)\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tlabel='City'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{cityList.map((item) => (\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={item}>{item}</MenuItem>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<br />\n\t\t\t\t\t<Typography variant='h6'>Input Data</Typography>\n\t\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t\t<Grid item xs={10}>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tid='name'\n\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\ttype='file'\n\t\t\t\t\t\t\t\tfullWidth={true}\n\t\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\t\tsetFile(event.target.files[0])\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\taccept='csv'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={2}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\tclassName={classes.margin}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tfloat: 'right',\n\t\t\t\t\t\t\t\t\theight: 55,\n\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClick={confirmUpload}\n\t\t\t\t\t\t\t\tdisabled={!file}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tUpload\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tlabel='Manual CSV Data Input'\n\t\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\t\trows={10}\n\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\trowsMax={10}\n\t\t\t\t\t\t\t\tfullWidth={true}\n\t\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\t\tsetRawData(event.target.value)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\t\t\tshrink: true,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tvalue={rawData}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t{!!btnEnabeled && !!showOutput && (\n\t\t\t\t<>\n\t\t\t\t\t<Typography variant='h6'>Personal Information</Typography>\n\t\t\t\t\t<Grid container spacing={8}>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t\t<p style={{ textAlign: 'left', fontWeight: 'bolder' }}>\n\t\t\t\t\t\t\t\t\t\tName :\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t\t<p style={{ textAlign: 'right' }}>{name}</p>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t\t<p style={{ textAlign: 'left', fontWeight: 'bolder' }}>\n\t\t\t\t\t\t\t\t\t\tAge :\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t\t<p style={{ textAlign: 'right' }}>{age}</p>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t\t<p style={{ textAlign: 'left', fontWeight: 'bolder' }}>\n\t\t\t\t\t\t\t\t\t\tGender :\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t\t<p style={{ textAlign: 'right' }}>{gender}</p>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Grid container spacing={4}>\n\t\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t\t<p style={{ textAlign: 'left', fontWeight: 'bolder' }}>\n\t\t\t\t\t\t\t\t\t\tEmail :\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t\t<p style={{ textAlign: 'right' }}>{email}</p>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t\t<p style={{ textAlign: 'left', fontWeight: 'bolder' }}>\n\t\t\t\t\t\t\t\t\t\tCountry :\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t\t<p style={{ textAlign: 'right' }}>{country}</p>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t\t<p style={{ textAlign: 'left', fontWeight: 'bolder' }}>\n\t\t\t\t\t\t\t\t\t\tCity :\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t\t<p style={{ textAlign: 'right' }}>{gender}</p>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid container spacing={8}>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Typography variant='h6'>Data</Typography>\n\t\t\t\t\t\t\t<Table data={csvData} />\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Typography variant='h6'>Chart</Typography>\n\t\t\t\t\t\t\t<Chart data={chartData} />\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t<Grid container spacing={3}>\n\t\t\t\t<Grid item xs={12} style={{ textAlign: 'center' }}>\n\t\t\t\t\t{!showOutput && (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\tsize='medium'\n\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\tclassName={classes.margin}\n\t\t\t\t\t\t\tdisabled={!btnEnabeled}\n\t\t\t\t\t\t\tstyle={{ marginRight: 20 }}\n\t\t\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tContinue\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t)}\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tsize='medium'\n\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\tonClick={handleReset}\n\t\t\t\t\t>\n\t\t\t\t\t\tReset\n\t\t\t\t\t</Button>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<Dialog\n\t\t\t\topenDialog={openDialog}\n\t\t\t\thandleCloseDialog={() => {\n\t\t\t\t\tsetOpenDialog(false)\n\t\t\t\t}}\n\t\t\t\thandleAccept={handleCSVUpload}\n\t\t\t/>\n\t\t\t<ToastContainer />\n\t\t</>\n\t)\n}\nexport default Main\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport useStyles from '../layout/Style'\nimport Main from '../components/Main'\n\nconst Dashboard = () => {\n\tconst classes = useStyles()\n\treturn (\n\t\t<Paper className={classes.control}>\n\t\t\t<Grid container spacing={3}>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<Main />\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Paper>\n\t)\n}\n\nexport default Dashboard\n","const reportWebVitals = (onPerfEntry) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry)\n\t\t\tgetFID(onPerfEntry)\n\t\t\tgetFCP(onPerfEntry)\n\t\t\tgetLCP(onPerfEntry)\n\t\t\tgetTTFB(onPerfEntry)\n\t\t})\n\t}\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport clsx from 'clsx'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport useStyles from './Style'\n\nconst Header = () => {\n\tconst classes = useStyles()\n\treturn (\n\t\t<AppBar\n\t\t\tposition='absolute'\n\t\t\tclassName={clsx(classes.appBar, classes.appBarShift)}\n\t\t>\n\t\t\t<Toolbar className={classes.toolbar}>\n\t\t\t\t<Typography\n\t\t\t\t\tcomponent='h1'\n\t\t\t\t\tvariant='h6'\n\t\t\t\t\tcolor='inherit'\n\t\t\t\t\tnoWrap\n\t\t\t\t\tclassName={classes.title}\n\t\t\t\t>\n\t\t\t\t\tReact Web App\n\t\t\t\t</Typography>\n\t\t\t</Toolbar>\n\t\t</AppBar>\n\t)\n}\n\nexport default Header\n","import React from 'react'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Container from '@material-ui/core/Container'\nimport useStyles from './Style'\nimport Header from './Header'\n\nconst Layout = (props) => {\n\tconst classes = useStyles()\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<CssBaseline />\n\t\t\t<Header />\n\t\t\t<main className={classes.content}>\n\t\t\t\t<div className={classes.appBarSpacer} />\n\t\t\t\t<Container maxWidth='lg' className={classes.container}>\n\t\t\t\t\t{props.children}\n\t\t\t\t</Container>\n\t\t\t</main>\n\t\t</div>\n\t)\n}\n\nexport default Layout\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from '../src/pages/Dashboard'\nimport reportWebVitals from './reportWebVitals'\nimport Layout from './layout/index'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Layout>\n\t\t\t<App />\n\t\t</Layout>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}